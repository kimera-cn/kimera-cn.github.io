<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>桃沢礼</title>
  
  <subtitle>生活明朗,万物可爱</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-10-16T08:22:07.701Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>桃沢礼</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript-DOM</title>
    <link href="http://example.com/2024/10/12/JavaScript-DOM/"/>
    <id>http://example.com/2024/10/12/JavaScript-DOM/</id>
    <published>2024-10-12T07:16:25.000Z</published>
    <updated>2024-10-16T08:22:07.701Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#dom-%E7%AE%80%E4%BB%8B">DOM 简介</a></li><li><a href="#%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0">获取元素</a></li><li><a href="#%E4%BA%8B%E4%BB%B6%E5%9F%BA%E7%A1%80">事件基础</a></li><li><a href="#%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0">操作元素</a></li><li><a href="#%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C">节点操作</a></li><li><a href="#dom-%E9%87%8D%E7%82%B9%E6%A0%B8%E5%BF%83">DOM 重点核心</a></li></ul><h2 id="DOM-简介"><a href="#DOM-简介" class="headerlink" title="DOM 简介"></a>DOM 简介</h2><p>文档对象模型（Document Object Model，简称 DOM），是 W3C 组织推荐的处理可扩展标记语言（HTML 或者XML）的标准编程接口。它是一个将网页转换为可编程文档结构的模型。通过DOM，开发者可以使用JavaScript等语言访问和操作网页的元素，从而动态地改变网页内容、结构和样式。简而言之，DOM是网页内容的编程接口。</p><h3 id="1-1-什么是-DOM"><a href="#1-1-什么是-DOM" class="headerlink" title="1.1 什么是 DOM"></a>1.1 什么是 DOM</h3><ul><li>文档：一个页面就是一个文档，DOM 中使用 <code>document</code> 表示</li><li>元素：页面中的所有标签都是元素，DOM 中使用 <code>element</code> 表示</li><li>节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM 中使用 <code>node</code> 表示</li></ul><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><h3 id="2-1-如何获取页面元素"><a href="#2-1-如何获取页面元素" class="headerlink" title="2.1 如何获取页面元素"></a>2.1 如何获取页面元素</h3><p>获取页面中的元素可以使用以下几种方式：</p><ul><li>根据 ID 获取</li><li>根据标签名获取</li><li>通过 HTML5 新增的方法获取</li></ul><h3 id="2-2-根据-ID-获取"><a href="#2-2-根据-ID-获取" class="headerlink" title="2.2 根据 ID 获取"></a>2.2 根据 ID 获取</h3><p>使用 <code>getElementById()</code> 方法可以获取带有 ID 的元素对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;id&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-3-根据标签名获取"><a href="#2-3-根据标签名获取" class="headerlink" title="2.3 根据标签名获取"></a>2.3 根据标签名获取</h3><p>使用 <code>getElementsByTagName()</code> 方法可以返回带有指定标签名的对象的集合。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;标签名&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-4-通过-HTML5-新增的方法获取"><a href="#2-4-通过-HTML5-新增的方法获取" class="headerlink" title="2.4 通过 HTML5 新增的方法获取"></a>2.4 通过 HTML5 新增的方法获取</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;选择器&#x27;</span>); <span class="comment">// 根据指定选择器返回第一个元素对象</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;类名&#x27;</span>); <span class="comment">// 根据类名返回元素对象集合</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;选择器&#x27;</span>); <span class="comment">// 根据指定选择器返回</span></span><br></pre></td></tr></table></figure><h3 id="2-5-获取body，html元素"><a href="#2-5-获取body，html元素" class="headerlink" title="2.5 获取body，html元素"></a>2.5 获取body，html元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">body</span> <span class="comment">// 返回body元素对象</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span> <span class="comment">// 返回html元素对象</span></span><br></pre></td></tr></table></figure><h2 id="事件基础"><a href="#事件基础" class="headerlink" title="事件基础"></a>事件基础</h2><h3 id="3-1-事件概述"><a href="#3-1-事件概述" class="headerlink" title="3.1 事件概述"></a>3.1 事件概述</h3><p>JavaScript事件是用户与网页交互时触发的行为，如点击、键盘输入等，通过事件监听器来处理这些事件，并可以访问事件对象获取详细信息，支持事件传播、默认行为阻止和自定义事件等功能。</p><h3 id="3-2-常用的鼠标事件"><a href="#3-2-常用的鼠标事件" class="headerlink" title="3.2 常用的鼠标事件"></a>3.2 常用的鼠标事件</h3><table><thead><tr><th>鼠标事件</th><th>触发条件</th></tr></thead><tbody><tr><td>onclick</td><td>鼠标点击左键触发</td></tr><tr><td>onmouseover</td><td>鼠标经过触发</td></tr><tr><td>onmouseout</td><td>鼠标离开触发</td></tr><tr><td>onfocus</td><td>获得鼠标焦点触发</td></tr><tr><td>onblur</td><td>失去鼠标焦点触发</td></tr><tr><td>onmousemove</td><td>鼠标移动触发</td></tr><tr><td>onmouseup</td><td>鼠标弹起触发</td></tr><tr><td>onmousedown</td><td>鼠标按下触发</td></tr></tbody></table><h2 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h2><h3 id="4-1-改变元素内容"><a href="#4-1-改变元素内容" class="headerlink" title="4.1 改变元素内容"></a>4.1 改变元素内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">innerText</span> </span><br><span class="line"><span class="comment">// 替换元素内的所有内容（包括HTML标签），只留下纯文本</span></span><br><span class="line">element.<span class="property">innerHTML</span> </span><br><span class="line"><span class="comment">// 替换元素内部的所有内容（包括原有的HTML标签和文本），并解析赋值的字符串作为新的HTML</span></span><br></pre></td></tr></table></figure><h3 id="4-2-常用元素的属性操作"><a href="#4-2-常用元素的属性操作" class="headerlink" title="4.2 常用元素的属性操作"></a>4.2 常用元素的属性操作</h3><ol><li><strong>innerText</strong>、<strong>innerHTML</strong></li><li><strong>src</strong>、<strong>href</strong></li><li><strong>id</strong>、<strong>alt</strong>、<strong>title</strong></li></ol><h3 id="4-3-表单元素的属性操作"><a href="#4-3-表单元素的属性操作" class="headerlink" title="4.3 表单元素的属性操作"></a>4.3 表单元素的属性操作</h3><p>利用 DOM 可以操作如下表单元素的属性：</p><ul><li><strong>type</strong></li><li><strong>value</strong></li><li><strong>checked</strong></li><li><strong>selected</strong></li><li><strong>disabled</strong></li></ul><h3 id="4-4-样式属性操作"><a href="#4-4-样式属性操作" class="headerlink" title="4.4 样式属性操作"></a>4.4 样式属性操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">style</span> <span class="comment">// 行内样式操作</span></span><br><span class="line">element.<span class="property">className</span> <span class="comment">// 类名样式操作</span></span><br></pre></td></tr></table></figure><!-- ### 4.5 排他思想如果有同一组元素，我们想要某一个元素实现某种样式，需要用到循环的排他思想算法：1. 所有元素全部清除样式（干掉其他人）2. 给当前元素设置样式 （留下我自己）3. 注意顺序不能颠倒，首先干掉其他人，再设置自己 --><h3 id="4-5-自定义属性的操作"><a href="#4-5-自定义属性的操作" class="headerlink" title="4.5 自定义属性的操作"></a>4.5 自定义属性的操作</h3><ol><li><p>获取属性值</p><ul><li><code>element.属性</code> 获取属性值。</li><li><code>element.getAttribute(&#39;属性&#39;)</code>;</li></ul></li><li><p>设置属性值</p><ul><li><code>element.属性 = ‘值’</code> 设置内置属性值。</li><li><code>element.setAttribute(&#39;属性&#39;, &#39;值&#39;)</code>;</li></ul></li><li><p>移除属性</p><ul><li><code>element.removeAttribute(&#39;属性&#39;)</code>;</li></ul></li></ol><h3 id="4-7-H5自定义属性"><a href="#4-7-H5自定义属性" class="headerlink" title="4.7 H5自定义属性"></a>4.7 H5自定义属性</h3><ol><li><p>设置H5自定义属性</p><ul><li>H5规定自定义属性<code>data-</code>开头做为属性名并且赋值。</li><li>比如 <code>&lt;div data-index=&quot;1&quot;&gt;&lt;/div&gt;</code></li><li>或者使用 JS 设置 <code>element.setAttribute(&#39;data-index&#39;, 2)</code></li></ul></li><li><p>获取H5自定义属性</p><ul><li>兼容性获取 <code>element.getAttribute(&#39;data-index&#39;)</code></li><li>H5新增 <code> element.dataset.index</code> 或者 <code>element.dataset[&#39;index&#39;]</code> (ie 11才开始支持)</li></ul></li></ol><h2 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h2><h3 id="5-1-节点概述"><a href="#5-1-节点概述" class="headerlink" title="5.1 节点概述"></a>5.1 节点概述</h3><p>网页中的所有内容都是节点（标签、属性、文本、注释等），在DOM 中，节点使用 <code>node</code> 来表示。<br>在Web开发中，节点（Node）是文档对象模型（DOM）中的一个基本单位，代表HTML或XML文档中的一个元素、文本、注释或文档本身。节点可以包含子节点，形成树状结构，允许程序对文档内容进行操作和遍历。</p><h3 id="5-3-节点层级"><a href="#5-3-节点层级" class="headerlink" title="5.3 节点层级"></a>5.3 节点层级</h3><ol><li><p>父级节点</p><ul><li><strong>node.parentNode</strong></li></ul></li><li><p>子节点</p><ul><li><strong>parentNode.childNodes</strong>（标准）</li><li><strong>parentNode.children</strong>（非标准）<font color="red">重点掌握</font></li><li><strong>parentNode.firstChild</strong></li><li><strong>parentNode.lastChild</strong></li><li><strong>parentNode.firstElementChild</strong></li><li><strong>parentNode.lastElementChild</strong></li></ul></li></ol><p>获取第一个子元素节点或最后一个子元素节点</p><ul><li>获取第一个子元素节点 <code>parentNode.chilren[0]</code> </li><li>获取最后一个子元素节点 <code>parentNode.chilren[parentNode.chilren.length - 1]</code></li></ul><ol start="3"><li>兄弟节点<ul><li><strong>node.nextSibling</strong> 返回当前元素的下一个兄弟元素节点</li><li><strong>node.previousSibling</strong> 返回当前元素的上一个兄弟元素节点</li><li><strong>node.nextElementSibling</strong> 返回当前元素的下一个兄弟元素节点</li><li><strong>node.previousElementSibling</strong> 返回当前元素的上一个兄弟元素节点</li></ul></li></ol><h3 id="5-4-创建节点"><a href="#5-4-创建节点" class="headerlink" title="5.4 创建节点"></a>5.4 创建节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tagName&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="5-5-添加节点"><a href="#5-5-添加节点" class="headerlink" title="5.5 添加节点"></a>5.5 添加节点</h3><ol><li><p><code>node.appendChild(child)</code><br>将一个节点添加到指定父节点的子节点列表末尾</p></li><li><p><code>node.insertBefore(child, 指定元素)</code><br>将一个节点添加到父节点的指定子节点前面</p></li></ol><h3 id="5-6-删除节点"><a href="#5-6-删除节点" class="headerlink" title="5.6 删除节点"></a>5.6 删除节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.<span class="title function_">removeChild</span>(child)</span><br></pre></td></tr></table></figure><p>node.removeChild() 方法从 DOM 中删除一个子节点，返回删除的节点。</p><h3 id="5-7-复制节点"><a href="#5-7-复制节点" class="headerlink" title="5.7 复制节点"></a>5.7 复制节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.<span class="title function_">cloneNode</span>()</span><br></pre></td></tr></table></figure><p>node.cloneNode() 方法返回调用该方法的节点的一个副本。<br>false 为浅拷贝，true 为深拷贝。</p><h3 id="5-8-替换节点"><a href="#5-8-替换节点" class="headerlink" title="5.8 替换节点"></a>5.8 替换节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parentNode.<span class="title function_">replaceChild</span>(newChild, oldChild);</span><br></pre></td></tr></table></figure><h3 id="5-9-创建元素总结"><a href="#5-9-创建元素总结" class="headerlink" title="5.9 创建元素总结"></a>5.9 创建元素总结</h3><ol><li><strong>document.write()</strong></li><li><strong>innerHTML</strong></li><li><strong>document.createElement()</strong></li></ol><p>区别：</p><ol><li><code>document.write()</code>：用于在文档加载时直接向页面输出文本或HTML内容，通常在页面加载完成后使用会导致页面内容被替换。</li><li><code>innerHTML</code>：用于获取或设置元素的HTML内容，可以动态修改指定元素内部的HTML结构和文本。</li><li><code>document.createElement()</code>：用于创建新的HTML元素节点，但不会自动将其添加到文档中，需要通过其他方法（如<code>appendChild</code>）将其插入到DOM中。</li><li>如果页面创建元素很多，建议使用 <code>innerHTML</code> 因其效率更高（不要拼接字符串，采取数组形式拼接）</li><li>如果页面创建元素较少，建议使用 <code>createElement()</code></li><li>不同浏览器下，<code>innerHTML</code> 效率要比 <code>createElement</code> 高</li></ol><h2 id="DOM-重点核心"><a href="#DOM-重点核心" class="headerlink" title="DOM 重点核心"></a>DOM 重点核心</h2><h3 id="6-1-创建"><a href="#6-1-创建" class="headerlink" title="6.1 创建"></a>6.1 创建</h3><ul><li><strong>document.write</strong>：直接将内容写入页面的内容流，但文档流执行完毕，则会导致页面全部重绘。</li><li><strong>element.innerHTML</strong>：将内容写入某个 DOM 节点，不会导致页面全部重绘。</li><li><strong>document.createElement()</strong> ：创建多个元素效率稍低，但结构更清晰。</li></ul><h3 id="6-2-增"><a href="#6-2-增" class="headerlink" title="6.2 增"></a>6.2 增</h3><ul><li><strong>appendChild</strong>：将一个节点添加到指定父节点的子节点列表末尾。</li><li><strong>insertBefore</strong>：将一个节点添加到父节点的指定子节点前面。</li></ul><h3 id="6-3-删"><a href="#6-3-删" class="headerlink" title="6.3 删"></a>6.3 删</h3><ul><li><strong>removeChild</strong>：从 DOM 中删除一个子节点。</li></ul><h3 id="6-4-改"><a href="#6-4-改" class="headerlink" title="6.4 改"></a>6.4 改</h3><ul><li>修改元素属性：<code>src</code>、<code>href</code>、<code>title</code> 等。</li><li>修改普通元素内容：<code>innerHTML</code>、<code>innerText</code>。</li><li>修改表单元素：<code>value</code>、<code>type</code>、<code>disabled</code> 等。</li><li>修改元素样式：<code>style</code>、<code>className</code>。</li></ul><h3 id="6-5-查"><a href="#6-5-查" class="headerlink" title="6.5 查"></a>6.5 查</h3><ul><li>DOM 提供的 API 方法：<code>getElementById</code>、<code>getElementsByTagName</code>。</li><li>H5 提供的新方法：<code>querySelector</code>、<code>querySelectorAll</code>。</li><li>利用节点操作获取元素：<code>parentNode</code>、<code>children</code>、<code>previousElementSibling</code>、<code>nextElementSibling</code>。</li></ul><h3 id="6-6-属性操作"><a href="#6-6-属性操作" class="headerlink" title="6.6 属性操作"></a>6.6 属性操作</h3><ul><li><strong>setAttribute</strong>：设置 DOM 的属性值。</li><li><strong>getAttribute</strong>：得到 DOM 的属性值。</li><li><strong>removeAttribute</strong>：移除属性。</li></ul><h3 id="6-7-事件操作"><a href="#6-7-事件操作" class="headerlink" title="6.7 事件操作"></a>6.7 事件操作</h3><ul><li>给元素注册事件，采取事件源.事件类型 &#x3D; 事件处理程序。<table><thead><tr><th>鼠标事件</th><th>触发条件</th></tr></thead><tbody><tr><td>onclick</td><td>鼠标点击左键触发</td></tr><tr><td>onmouseover</td><td>鼠标经过触发</td></tr><tr><td>onmouseout</td><td>鼠标离开触发</td></tr><tr><td>onfocus</td><td>获得鼠标焦点触发</td></tr><tr><td>onblur</td><td>失去鼠标焦点触发</td></tr><tr><td>onmousemove</td><td>鼠标移动触发</td></tr><tr><td>onmouseup</td><td>鼠标弹起触发</td></tr><tr><td>onmousedown</td><td>鼠标按下触发</td></tr></tbody></table></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DOM&quot;&gt;&lt;a href=&quot;#DOM&quot; class=&quot;headerlink&quot; title=&quot;DOM&quot;&gt;&lt;/a&gt;DOM&lt;/h1&gt;&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;u</summary>
      
    
    
    
    <category term="前端开发" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript之操作元素</title>
    <link href="http://example.com/2024/10/11/JavaScript%E4%B9%8B%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0/"/>
    <id>http://example.com/2024/10/11/JavaScript%E4%B9%8B%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0/</id>
    <published>2024-10-11T07:06:24.000Z</published>
    <updated>2024-10-11T07:32:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h1><p>JavaScript的DOM操作可以改变网页内容、结构和样式，我们可以利用DOM操作来改变元素里面的内容、属性等。注意以下都是属性<br>所有<code>&lt;script&gt;&lt;/script&gt;</code>放在<code>&lt;body&gt;&lt;/body&gt;</code>中的最后，避免 JavaScript 操作 DOM 失效</p><h2 id="1-改变元素内容"><a href="#1-改变元素内容" class="headerlink" title="1.改变元素内容"></a>1.改变元素内容</h2><p><code>element.innerText</code></p><p>从其实位置到种植位置的内容，但它去除html标签，同时空格和换行也会去掉</p><p><code>element.innerHTML</code></p><p>起始位置到终止位置的全部内容，包括html标签，同时保留空格和换行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> &lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>显示当前系统时间<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>某个时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 当我们点击了按钮，  div里面的文字会发生变化</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 1. 获取元素 </span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 2.注册事件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// div.innerText = &#x27;2024-10-11&#x27;;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            div.<span class="property">innerHTML</span> = <span class="title function_">getDate</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">function</span> <span class="title function_">getDate</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 我们写一个 2024年 10月 11日 星期三</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> year = date.<span class="title function_">getFullYear</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> month = date.<span class="title function_">getMonth</span>() + <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> dates = date.<span class="title function_">getDate</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> arr = [<span class="string">&#x27;星期日&#x27;</span>, <span class="string">&#x27;星期一&#x27;</span>, <span class="string">&#x27;星期二&#x27;</span>, <span class="string">&#x27;星期三&#x27;</span>, <span class="string">&#x27;星期四&#x27;</span>, <span class="string">&#x27;星期五&#x27;</span>, <span class="string">&#x27;星期六&#x27;</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> day = date.<span class="title function_">getDay</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> <span class="string">&#x27;今天是：&#x27;</span> + year + <span class="string">&#x27;年&#x27;</span> + month + <span class="string">&#x27;月&#x27;</span> + dates + <span class="string">&#x27;日 &#x27;</span> + arr[day];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 我们元素可以不用添加事件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        p.<span class="property">innerText</span> = <span class="title function_">getDate</span>();<span class="comment">//页面加载就直接显示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> a = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;a&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        a.<span class="property">innerText</span> = <span class="string">&#x27;&lt;strong&gt;aaa&lt;/strong&gt;bbb&#x27;</span>;<span class="comment">//&lt;strong&gt;aaa&lt;/strong&gt;bbb</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        a.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;strong&gt;aaa&lt;/strong&gt;bbb&#x27;</span>;<span class="comment">//aaabbb(aaa加粗)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><code>innerText</code>和<code>innerHTML</code>是可读写的 可以获得里面的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        我是文字</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerText</span>);<span class="comment">//我是文字 123</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerHTML</span>);<span class="comment">//我是文字</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                   <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="2-常用元素的属性操作"><a href="#2-常用元素的属性操作" class="headerlink" title="2.常用元素的属性操作"></a>2.常用元素的属性操作</h2><p><code>src、href、id、alt、title</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;ldh&quot;</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;zxy&quot;</span>&gt;</span>张学友<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/ldh.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;刘德华&quot;</span> <span class="attr">title</span>=<span class="string">&quot;刘德华&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 修改元素属性 src</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 1.获取元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> ldh = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ldh&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> zxy = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#zxy&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 2.注册事件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        zxy.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            img.<span class="property">src</span> = <span class="string">&#x27;images/zxy.jpg&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            img.<span class="property">title</span> = <span class="string">&#x27;张学友&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ldh.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            img.<span class="property">src</span> = <span class="string">&#x27;images/ldh.jpg&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            img.<span class="property">title</span> = <span class="string">&#x27;刘德华&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="3-表单元素的属性操作"><a href="#3-表单元素的属性操作" class="headerlink" title="3.表单元素的属性操作"></a>3.表单元素的属性操作</h2><p>利用DOM可以操作如下表单元素的属性</p><p><code>type,value,checked,selected,disabled</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;输入内容&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            input.<span class="property">value</span> = <span class="string">&#x27;点击了按钮&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">disabled</span> = <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="4-样式属性操作"><a href="#4-样式属性操作" class="headerlink" title="4.样式属性操作"></a>4.样式属性操作</h2><h3 id="4-1修改样式属性"><a href="#4-1修改样式属性" class="headerlink" title="4.1修改样式属性"></a>4.1修改样式属性</h3><p><code>element. style</code> 行内样式操作</p><pre><code class="html">    &lt;style&gt;            div &#123;                width: 200px;                height: 200px;                background-color: pink;            &#125;    &lt;/style&gt;                    &lt;body&gt;        &lt;div&gt;&lt;/div&gt;                    &lt;script&gt;            let div = document.querySelector(&#39;div&#39;);            div.onclick = function () &#123;                this.style.backgroundColor = &#39;red&#39;;            &#125;        &lt;/script&gt;    &lt;/body&gt;</code></pre><p><code>element. className</code> 类名样式操作</p><p>因为class是保留字所以用className</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;操作元素&quot;&gt;&lt;a href=&quot;#操作元素&quot; class=&quot;headerlink&quot; title=&quot;操作元素&quot;&gt;&lt;/a&gt;操作元素&lt;/h1&gt;&lt;p&gt;JavaScript的DOM操作可以改变网页内容、结构和样式，我们可以利用DOM操作来改变元素里面的内容、属性等。注意以下都</summary>
      
    
    
    
    <category term="前端开发" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="http://example.com/2024/10/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://example.com/2024/10/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2024-10-11T05:21:09.000Z</published>
    <updated>2024-10-11T05:27:12.590Z</updated>
    
    <content type="html"><![CDATA[<h3 id="这是我的第一篇文章1"><a href="#这是我的第一篇文章1" class="headerlink" title="这是我的第一篇文章1"></a>这是我的第一篇文章1</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;这是我的第一篇文章1&quot;&gt;&lt;a href=&quot;#这是我的第一篇文章1&quot; class=&quot;headerlink&quot; title=&quot;这是我的第一篇文章1&quot;&gt;&lt;/a&gt;这是我的第一篇文章1&lt;/h3&gt;</summary>
      
    
    
    
    
    <category term="test" scheme="http://example.com/tags/test/"/>
    
  </entry>
  
</feed>
